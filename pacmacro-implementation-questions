How should being captured be handled? Should the server update the status of players when they are within x distance of eachother? Or, should players manually tell the server that they have captured another player? If a player has to manually tell the server they've captured someone, then does the other captured player then have to confirm?
Jeffrey Leung (GitHub user jleung51): After discussion, we have decided that physical tagging is the best and most reliable way to make sure that tagging happens when it needs to happen (see the discussion from here on: https://github.com/pacmacro/pm-server/issues/15#issuecomment-237449581). The players will manually have to choose an option in the app to capture a player, and both players (tagged and untagged) will need to select who tagged whom for the tag to be successful.

How should pellets (scores) be handled? Does the server know the location of the pellets? Does the server tell us when the pellets are? Does the server tell us if our character has hit a pellet? Does the server keep track of a player's score?
Jeffrey Leung (GitHub user jleung51): The server knows the location of all the pellets (see discussion https://github.com/pacmacro/pm-server/issues/50 and documentation https://github.com/pacmacro/pm-server/wiki/Pacdot-Locations) and the device can query the server for the pellet locations. The server will also calculate whether a character eats a pellet, as well as the number and locations of eaten pellets (which is what the score is calculated on, so the server will provide a score calculation). 

How should power up pills be handled? Again, does the server know the location of the pill? Will the server automatically update a player's status based on the proximity to the pill, or does the client have to tell the server that they have collected a powerup pill?
Jeffrey Leung (GitHub user jleung51): Power pellets are treated like normal pellets, but with an extra flag specifying their special property. The server will keep track of these pills, and whether or not a player is close enough to eat one. The server will check if a status change is necessary based on the updated location of a player.

How do we know the start/stop of a game? Right now, we can sort of infer the start and stop of a game based on player ready statuses, but what about stopping a game? What is the definition of a game ending?
Jeffrey Leung (GitHub user jleung51): Currently, the start and stop of a game are done manually, but starting should be done through an administrative panel and stopping should be done automatically through capturing the Pacman, capturing all Ghosts, or eating all pellets.
